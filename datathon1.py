# -*- coding: utf-8 -*-
"""Datathon1.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/12wbKB9B53J3BV9Yl-p8K4wnVczcTvh3-
"""

import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns
from sklearn.preprocessing import LabelEncoder
from sklearn.metrics import accuracy_score,confusion_matrix,precision_score
from sklearn.naive_bayes import GaussianNB,MultinomialNB,BernoulliNB,ComplementNB
from sklearn.model_selection import train_test_split
from sklearn.ensemble import RandomForestClassifier

data=pd.read_csv("/content/train.csv")
testdata=pd.read_csv("/content/test_x.csv")

data.head()

testdata.shape

data.shape

data.info()

data.dtypes

data.describe()

data.isnull().sum()

data["Öbek İsmi"].value_counts()

sns.FacetGrid(data,hue="Öbek İsmi",height=6).map(plt.scatter,"Yıllık Ortalama Gelir","Yıllık Ortalama Satın Alım Miktarı").add_legend()

x=data.drop("Öbek İsmi",axis=1)
y=data["Öbek İsmi"]

from sklearn.model_selection import train_test_split
x_train,x_test,y_train,y_test=train_test_split(x,y,test_size=0.44,random_state=52)

!pip install category_encoders

import category_encoders as ce
xencoder = ce.OneHotEncoder(cols=['Cinsiyet', 'Yaş Grubu', 'Medeni Durum', 'Eğitim Düzeyi', 'İstihdam Durumu', 'Yaşadığı Şehir',"En Çok İlgilendiği Ürün Grubu","Eğitime Devam Etme Durumu"])
x_train = xencoder.fit_transform(x_train)
x_test = xencoder.transform(x_test)

x_test.head()

x_train.head()

from sklearn.linear_model import LogisticRegression
from sklearn.svm import SVC
from sklearn.tree import DecisionTreeClassifier
from sklearn.naive_bayes import MultinomialNB
from sklearn.tree import DecisionTreeClassifier
from sklearn.neighbors import KNeighborsClassifier
from sklearn.ensemble import RandomForestClassifier ,AdaBoostClassifier,BaggingClassifier,ExtraTreesClassifier,GradientBoostingClassifier
from xgboost import XGBClassifier

rfc=RandomForestClassifier(random_state=50, n_jobs=-1, criterion="entropy" ,max_depth=8,
                                       n_estimators=100, oob_score=True)

rfc.fit(x_train,y_train)

y_pred = rfc.predict(x_test)

print('Model accuracy score with 10 decision-trees : {0:0.4f}'. format(accuracy_score(y_test, y_pred)))

import category_encoders as ce
encoder = ce.OneHotEncoder(cols=['Cinsiyet', 'Yaş Grubu', 'Medeni Durum', 'Eğitim Düzeyi', 'İstihdam Durumu', 'Yaşadığı Şehir',"En Çok İlgilendiği Ürün Grubu","Eğitime Devam Etme Durumu"])
testdata = encoder.fit_transform(testdata)

testdata.head()

testdata["Öbek İsmi"]=""
testdata['Öbek İsmi'] = rfc.predict(testdata.drop('Öbek İsmi',axis=1))

testdata.head()

veri = {
    'id': range(2340),
    'Öbek İsmi':testdata["Öbek İsmi"]
}
submission_data = pd.DataFrame(veri)
submission_data.set_index('id', inplace=True)
submission_data

submission_data.to_csv('submission_data20.csv')